trigger:
  - main

variables:
  azureContainerRegistry: 'bestrong'
  azureResourceGroup: 'pivinter-rg'
  imageRepository: 'bestrong-api'
  tag: '$(Build.BuildId)'
  # Separate connection types for different Azure resources
  dockerRegistryServiceConnection: 'bestrong-acr'  # Docker registry connection
  azureRmServiceConnection: 'azure-conn'           # Azure Resource Manager connection

stages:
# Stage 1: Build & Push Docker Image to ACR
- stage: Build
  jobs:
  - job: BuildAndPush
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self

    - task: Docker@2
      displayName: 'Login to ACR'
      inputs:
        command: login
        containerRegistry: '$(dockerRegistryServiceConnection)' 

    - task: Docker@2
      displayName: 'Build and Push Docker Image'
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: buildAndPush
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: |
          $(tag)
          latest

# Stage 2: Package & Push Helm Chart to ACR
- stage: Package
  displayName: 'Package Helm Chart'
  jobs:
  - job: PackageHelmChart
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self

    - task: HelmInstaller@1
      inputs:
        helmVersionToInstall: 'latest'

    - script: |
        helm package $(Build.SourcesDirectory)/Helm \
          --version $(Build.BuildId) \
          --destination $(Build.ArtifactStagingDirectory)
      displayName: 'Package Helm Chart'

    # Using AzureCLI@2 with correct service connection
    - task: AzureCLI@2
      displayName: 'Push Helm Chart to ACR'
      inputs:
        azureSubscription: '$(azureRmServiceConnection)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Ensure the ACR login works properly
          az acr login --name $(azureContainerRegistry)
          
          # Using az acr helm command (if using Helm 3, consider using OCI artifacts)
          az acr helm repo add --name $(azureContainerRegistry)
          az acr helm push \
            --name $(azureContainerRegistry) \
            $(Build.ArtifactStagingDirectory)/bestrong-$(Build.BuildId).tgz

# Stage 3: Deploy to AKS
- stage: Deploy
  displayName: 'Deploy to AKS'
  dependsOn:
    - Build
    - Package
  jobs:
  - deployment: DeployToAKS
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self

          - task: HelmInstaller@1
            inputs:
              helmVersionToInstall: 'latest'

          - task: HelmDeploy@0
            displayName: 'Helm Upgrade'
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscription: '$(azureRmServiceConnection)'
              azureResourceGroup: '$(azureResourceGroup)'
              kubernetesCluster: 'aks-bestrong'
              namespace: 'default'
              command: 'upgrade'
              chartType: 'Name'
              chartName: '$(azureContainerRegistry)/bestrong'
              releaseName: 'bestrong-api'
              arguments: '--version $(Build.BuildId) --set image.repository=$(azureContainerRegistry).azurecr.io/$(imageRepository) --set image.tag=$(tag)'